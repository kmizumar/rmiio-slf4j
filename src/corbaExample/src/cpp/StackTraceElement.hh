// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __StackTraceElement_hh__
#define __StackTraceElement_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_StackTraceElement
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_StackTraceElement
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_StackTraceElement
#endif



#ifndef __corbaidl_hh_EXTERNAL_GUARD__
#define __corbaidl_hh_EXTERNAL_GUARD__
#include <corbaidl.hh>
#endif
#ifndef __boxes_hh_EXTERNAL_GUARD__
#define __boxes_hh_EXTERNAL_GUARD__
#include <boxes.hh>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE java

_CORBA_MODULE_BEG

  _CORBA_MODULE lang

  _CORBA_MODULE_BEG

#ifndef __java_mlang_mStackTraceElement__
#define __java_mlang_mStackTraceElement__

    class StackTraceElement;

    class StackTraceElement_Helper {
    public:
      static void add_ref(StackTraceElement*);
      static void remove_ref(StackTraceElement*);
      static void marshal(StackTraceElement*, cdrStream&);
      static StackTraceElement* unmarshal(cdrStream&);
    };

    typedef _CORBA_Value_Var    <StackTraceElement,StackTraceElement_Helper> StackTraceElement_var;
    typedef _CORBA_Value_Member <StackTraceElement,StackTraceElement_Helper> StackTraceElement_member;
    typedef _CORBA_Value_OUT_arg<StackTraceElement,StackTraceElement_Helper> StackTraceElement_out;

#endif // __java_mlang_mStackTraceElement__

    class StackTraceElement : 
      public virtual CORBA::ValueBase
    {
    public:  
      // Standard mapping
      typedef StackTraceElement*    _ptr_type;
      typedef StackTraceElement_var _var_type;

      static _ptr_type _downcast (CORBA::ValueBase*);
      

#ifdef OMNI_HAVE_COVARIANT_RETURNS
      virtual StackTraceElement* _copy_value();
#else
      virtual CORBA::ValueBase* _copy_value();
#endif

      // Definitions in this scope
      

      // Operations and attributes
      virtual CORBA::WStringValue* fileName() = 0;
      virtual CORBA::Long lineNumber() = 0;
      virtual CORBA::WStringValue* className() = 0;
      virtual CORBA::WStringValue* methodName() = 0;

      // Accessors for public members
      

    protected:
      // Accessors for private members
      

    public:
      // omniORB internal
      virtual const char* _NP_repositoryId() const;
      virtual const char* _NP_repositoryId(CORBA::ULong& _hashval) const;

      virtual const _omni_ValueIds* _NP_truncatableIds() const;

      virtual CORBA::Boolean _NP_custom() const;

      virtual void* _ptrToValue(const char* id);

      static void _NP_marshal(StackTraceElement*, cdrStream&);
      static StackTraceElement* _NP_unmarshal(cdrStream&);
      

      virtual void _PR_marshal_state(cdrStream&) const;
      virtual void _PR_unmarshal_state(cdrStream&);
      virtual void _PR_copy_state(StackTraceElement*);

      static _core_attr const char* _PD_repoId;

    protected:
      StackTraceElement();
      virtual ~StackTraceElement();

    private:
      // Not implemented
      StackTraceElement(const StackTraceElement &);
      void operator=(const StackTraceElement &);
    };

    class StackTraceElement_init : public CORBA::ValueFactoryBase
    {
    public:
      virtual ~StackTraceElement_init();

      virtual StackTraceElement* create(CORBA::WStringValue* arg0, CORBA::WStringValue* arg1, CORBA::WStringValue* arg2, CORBA::Long arg3) = 0;

      static StackTraceElement_init* _downcast(CORBA::ValueFactory _v);
      virtual void* _ptrToFactory(const char* _id);
    protected:
      StackTraceElement_init();
    };

  _CORBA_MODULE_END

_CORBA_MODULE_END



_CORBA_MODULE POA_java
_CORBA_MODULE_BEG

  _CORBA_MODULE lang
  _CORBA_MODULE_BEG

  _CORBA_MODULE_END

_CORBA_MODULE_END



_CORBA_MODULE OBV_java
_CORBA_MODULE_BEG

  _CORBA_MODULE lang
  _CORBA_MODULE_BEG

    class StackTraceElement :
      public virtual java::lang::StackTraceElement
    {
    protected:
      StackTraceElement();
      
      virtual ~StackTraceElement();

    public:
      

    protected:
      

    private:
      
    };

  _CORBA_MODULE_END

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr





#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_StackTraceElement
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_StackTraceElement
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_StackTraceElement
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_StackTraceElement
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_StackTraceElement
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_StackTraceElement
#endif

#endif  // __StackTraceElement_hh__

