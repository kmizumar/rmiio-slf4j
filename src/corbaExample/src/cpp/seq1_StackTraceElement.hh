// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __seq1__StackTraceElement_hh__
#define __seq1__StackTraceElement_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_seq1__StackTraceElement
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_seq1__StackTraceElement
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_seq1__StackTraceElement
#endif



#ifndef __corbaidl_hh_EXTERNAL_GUARD__
#define __corbaidl_hh_EXTERNAL_GUARD__
#include <corbaidl.hh>
#endif
#ifndef __boxes_hh_EXTERNAL_GUARD__
#define __boxes_hh_EXTERNAL_GUARD__
#include <boxes.hh>
#endif
#ifndef __StackTraceElement_hh_EXTERNAL_GUARD__
#define __StackTraceElement_hh_EXTERNAL_GUARD__
#include <StackTraceElement.hh>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE java

_CORBA_MODULE_BEG

  _CORBA_MODULE lang

  _CORBA_MODULE_BEG

#ifndef __java_mlang_mStackTraceElement__
#define __java_mlang_mStackTraceElement__

    class StackTraceElement;

    class StackTraceElement_Helper {
    public:
      static void add_ref(StackTraceElement*);
      static void remove_ref(StackTraceElement*);
      static void marshal(StackTraceElement*, cdrStream&);
      static StackTraceElement* unmarshal(cdrStream&);
    };

    typedef _CORBA_Value_Var    <StackTraceElement,StackTraceElement_Helper> StackTraceElement_var;
    typedef _CORBA_Value_Member <StackTraceElement,StackTraceElement_Helper> StackTraceElement_member;
    typedef _CORBA_Value_OUT_arg<StackTraceElement,StackTraceElement_Helper> StackTraceElement_out;

#endif // __java_mlang_mStackTraceElement__

  _CORBA_MODULE_END

_CORBA_MODULE_END

_CORBA_MODULE org

_CORBA_MODULE_BEG

  _CORBA_MODULE omg

  _CORBA_MODULE_BEG

    _CORBA_MODULE boxedRMI

    _CORBA_MODULE_BEG

      _CORBA_MODULE java

      _CORBA_MODULE_BEG

        _CORBA_MODULE lang

        _CORBA_MODULE_BEG

          class _0RL_boxed_seq1_StackTraceElement_var;

          class _0RL_boxed_seq1_StackTraceElement : public _CORBA_Unbounded_Sequence_Value< ::java::lang::StackTraceElement, _CORBA_Value_Element< ::java::lang::StackTraceElement, ::java::lang::StackTraceElement_Helper > , ::java::lang::StackTraceElement_Helper >  {
          public:
            typedef _0RL_boxed_seq1_StackTraceElement_var _var_type;
            inline _0RL_boxed_seq1_StackTraceElement() {}
            inline _0RL_boxed_seq1_StackTraceElement(const _0RL_boxed_seq1_StackTraceElement& _s)
              : _CORBA_Unbounded_Sequence_Value< ::java::lang::StackTraceElement, _CORBA_Value_Element< ::java::lang::StackTraceElement, ::java::lang::StackTraceElement_Helper > , ::java::lang::StackTraceElement_Helper > (_s) {}

            inline _0RL_boxed_seq1_StackTraceElement(_CORBA_ULong _max)
              : _CORBA_Unbounded_Sequence_Value< ::java::lang::StackTraceElement, _CORBA_Value_Element< ::java::lang::StackTraceElement, ::java::lang::StackTraceElement_Helper > , ::java::lang::StackTraceElement_Helper > (_max) {}
            inline _0RL_boxed_seq1_StackTraceElement(_CORBA_ULong _max, _CORBA_ULong _len, ::java::lang::StackTraceElement** _val, _CORBA_Boolean _rel=0)
              : _CORBA_Unbounded_Sequence_Value< ::java::lang::StackTraceElement, _CORBA_Value_Element< ::java::lang::StackTraceElement, ::java::lang::StackTraceElement_Helper > , ::java::lang::StackTraceElement_Helper > (_max, _len, _val, _rel) {}

          

            inline _0RL_boxed_seq1_StackTraceElement& operator = (const _0RL_boxed_seq1_StackTraceElement& _s) {
              _CORBA_Unbounded_Sequence_Value< ::java::lang::StackTraceElement, _CORBA_Value_Element< ::java::lang::StackTraceElement, ::java::lang::StackTraceElement_Helper > , ::java::lang::StackTraceElement_Helper > ::operator=(_s);
              return *this;
            }
          };

          class _0RL_boxed_seq1_StackTraceElement_out;

          class _0RL_boxed_seq1_StackTraceElement_var {
          public:
            inline _0RL_boxed_seq1_StackTraceElement_var() : _pd_seq(0) {}
            inline _0RL_boxed_seq1_StackTraceElement_var(_0RL_boxed_seq1_StackTraceElement* _s) : _pd_seq(_s) {}
            inline _0RL_boxed_seq1_StackTraceElement_var(const _0RL_boxed_seq1_StackTraceElement_var& _s) {
              if( _s._pd_seq )  _pd_seq = new _0RL_boxed_seq1_StackTraceElement(*_s._pd_seq);
              else              _pd_seq = 0;
            }
            inline ~_0RL_boxed_seq1_StackTraceElement_var() { if( _pd_seq )  delete _pd_seq; }
              
            inline _0RL_boxed_seq1_StackTraceElement_var& operator = (_0RL_boxed_seq1_StackTraceElement* _s) {
              if( _pd_seq )  delete _pd_seq;
              _pd_seq = _s;
              return *this;
            }
            inline _0RL_boxed_seq1_StackTraceElement_var& operator = (const _0RL_boxed_seq1_StackTraceElement_var& _s) {
              if( _s._pd_seq ) {
                if( !_pd_seq )  _pd_seq = new _0RL_boxed_seq1_StackTraceElement;
                *_pd_seq = *_s._pd_seq;
              } else if( _pd_seq ) {
                delete _pd_seq;
                _pd_seq = 0;
              }
              return *this;
            }
            inline _CORBA_Value_Element< ::java::lang::StackTraceElement, ::java::lang::StackTraceElement_Helper >  operator [] (_CORBA_ULong _s) {
              return (*_pd_seq)[_s];
            }

          

            inline _0RL_boxed_seq1_StackTraceElement* operator -> () { return _pd_seq; }
            inline const _0RL_boxed_seq1_StackTraceElement* operator -> () const { return _pd_seq; }
#if defined(__GNUG__)
            inline operator _0RL_boxed_seq1_StackTraceElement& () const { return *_pd_seq; }
#else
            inline operator const _0RL_boxed_seq1_StackTraceElement& () const { return *_pd_seq; }
            inline operator _0RL_boxed_seq1_StackTraceElement& () { return *_pd_seq; }
#endif
              
            inline const _0RL_boxed_seq1_StackTraceElement& in() const { return *_pd_seq; }
            inline _0RL_boxed_seq1_StackTraceElement&       inout()    { return *_pd_seq; }
            inline _0RL_boxed_seq1_StackTraceElement*&      out() {
              if( _pd_seq ) { delete _pd_seq; _pd_seq = 0; }
              return _pd_seq;
            }
            inline _0RL_boxed_seq1_StackTraceElement* _retn() { _0RL_boxed_seq1_StackTraceElement* tmp = _pd_seq; _pd_seq = 0; return tmp; }
              
            friend class _0RL_boxed_seq1_StackTraceElement_out;
            
          private:
            _0RL_boxed_seq1_StackTraceElement* _pd_seq;
          };

          class _0RL_boxed_seq1_StackTraceElement_out {
          public:
            inline _0RL_boxed_seq1_StackTraceElement_out(_0RL_boxed_seq1_StackTraceElement*& _s) : _data(_s) { _data = 0; }
            inline _0RL_boxed_seq1_StackTraceElement_out(_0RL_boxed_seq1_StackTraceElement_var& _s)
              : _data(_s._pd_seq) { _s = (_0RL_boxed_seq1_StackTraceElement*) 0; }
            inline _0RL_boxed_seq1_StackTraceElement_out(const _0RL_boxed_seq1_StackTraceElement_out& _s) : _data(_s._data) {}
            inline _0RL_boxed_seq1_StackTraceElement_out& operator = (const _0RL_boxed_seq1_StackTraceElement_out& _s) {
              _data = _s._data;
              return *this;
            }
            inline _0RL_boxed_seq1_StackTraceElement_out& operator = (_0RL_boxed_seq1_StackTraceElement* _s) {
              _data = _s;
              return *this;
            }
            inline operator _0RL_boxed_seq1_StackTraceElement*&()  { return _data; }
            inline _0RL_boxed_seq1_StackTraceElement*& ptr()       { return _data; }
            inline _0RL_boxed_seq1_StackTraceElement* operator->() { return _data; }

            inline _CORBA_Value_Element< ::java::lang::StackTraceElement, ::java::lang::StackTraceElement_Helper >  operator [] (_CORBA_ULong _i) {
              return (*_data)[_i];
            }

          

            _0RL_boxed_seq1_StackTraceElement*& _data;

          private:
            _0RL_boxed_seq1_StackTraceElement_out();
            _0RL_boxed_seq1_StackTraceElement_out& operator=(const _0RL_boxed_seq1_StackTraceElement_var&);
          };

#ifndef __org_momg_mboxedRMI_mjava_mlang_mseq1__StackTraceElement__
#define __org_momg_mboxedRMI_mjava_mlang_mseq1__StackTraceElement__

          class seq1_StackTraceElement;

          class seq1_StackTraceElement_Helper {
          public:
            static void add_ref(seq1_StackTraceElement*);
            static void remove_ref(seq1_StackTraceElement*);
            static void marshal(seq1_StackTraceElement*, cdrStream&);
            static seq1_StackTraceElement* unmarshal(cdrStream&);
          };

          typedef _CORBA_Value_Var    <seq1_StackTraceElement,seq1_StackTraceElement_Helper> seq1_StackTraceElement_var;
          typedef _CORBA_Value_Member <seq1_StackTraceElement,seq1_StackTraceElement_Helper> seq1_StackTraceElement_member;
          typedef _CORBA_Value_OUT_arg<seq1_StackTraceElement,seq1_StackTraceElement_Helper> seq1_StackTraceElement_out;

#endif // __org_momg_mboxedRMI_mjava_mlang_mseq1__StackTraceElement__

          class seq1_StackTraceElement :
            public CORBA::DefaultValueRefCountBase
          {
          public:
            typedef seq1_StackTraceElement_var _var_type;

            inline seq1_StackTraceElement() {
              _pd_boxed = new _0RL_boxed_seq1_StackTraceElement;
            }
            inline seq1_StackTraceElement(const _0RL_boxed_seq1_StackTraceElement& _v) {
              _pd_boxed = new _0RL_boxed_seq1_StackTraceElement(_v);
            }
            inline seq1_StackTraceElement(const seq1_StackTraceElement& _v) :
              ValueBase (_v), DefaultValueRefCountBase (_v) {
              _pd_boxed = new _0RL_boxed_seq1_StackTraceElement(_v._pd_boxed.in());
            }
            inline seq1_StackTraceElement(CORBA::ULong _max) {
              _pd_boxed = new _0RL_boxed_seq1_StackTraceElement(_max);
            }
            inline seq1_StackTraceElement(CORBA::ULong _max, CORBA::ULong _len, ::java::lang::StackTraceElement** _val, CORBA::Boolean _rel=0) {
              _pd_boxed = new _0RL_boxed_seq1_StackTraceElement(_max, _len, _val, _rel);
            }



            inline seq1_StackTraceElement& operator=(const _0RL_boxed_seq1_StackTraceElement& _v) {
              _pd_boxed = new _0RL_boxed_seq1_StackTraceElement(_v);
              return *this;
            }

            inline const _0RL_boxed_seq1_StackTraceElement& _value() const {
              return _pd_boxed.in();
            }
            inline _0RL_boxed_seq1_StackTraceElement& _value() {
              return _pd_boxed.inout();
            }
            inline void _value(const _0RL_boxed_seq1_StackTraceElement& _v) {
              _pd_boxed = new _0RL_boxed_seq1_StackTraceElement(_v);
            }

            inline const _0RL_boxed_seq1_StackTraceElement& _boxed_in() const {
              return _pd_boxed.in();
            }
            inline _0RL_boxed_seq1_StackTraceElement& _boxed_inout() {
              return _pd_boxed.inout();
            }
            inline _0RL_boxed_seq1_StackTraceElement_out _boxed_out() {
              return _pd_boxed.out();
            }

            inline CORBA::ULong maximum() const {
              return _pd_boxed->maximum();
            }
            inline CORBA::ULong length() const {
              return _pd_boxed->length();
            }
            inline void length(CORBA::ULong _len) {
              _pd_boxed->length(_len);
            }

            inline _CORBA_Value_Element< ::java::lang::StackTraceElement, ::java::lang::StackTraceElement_Helper >  operator[](CORBA::ULong _i) {
              return _pd_boxed[_i];
            }

          

            static seq1_StackTraceElement* _downcast(ValueBase*);

#ifdef OMNI_HAVE_COVARIANT_RETURNS
            virtual seq1_StackTraceElement* _copy_value();
#else
            virtual CORBA::ValueBase* _copy_value();
#endif

            // omniORB internal
            virtual const char* _NP_repositoryId() const;
            virtual const char* _NP_repositoryId(CORBA::ULong& _hashval) const;

            virtual const _omni_ValueIds* _NP_truncatableIds() const;

            virtual CORBA::Boolean _NP_custom() const;
            virtual CORBA::Boolean _NP_box() const;

            virtual void* _ptrToValue(const char* id);

            static void _NP_marshal(seq1_StackTraceElement*, cdrStream&);
            static seq1_StackTraceElement* _NP_unmarshal(cdrStream&);

            virtual void _PR_marshal_state(cdrStream&) const;
            virtual void _PR_unmarshal_state(cdrStream&);
            virtual void _PR_copy_state(seq1_StackTraceElement*);

            static _core_attr const char* _PD_repoId;

          protected:
            ~seq1_StackTraceElement();
          private:
            void operator=(const seq1_StackTraceElement&);

            _0RL_boxed_seq1_StackTraceElement_var _pd_boxed;
          };

        _CORBA_MODULE_END

      _CORBA_MODULE_END

    _CORBA_MODULE_END

  _CORBA_MODULE_END

_CORBA_MODULE_END



_CORBA_MODULE POA_java
_CORBA_MODULE_BEG

  _CORBA_MODULE lang
  _CORBA_MODULE_BEG

  _CORBA_MODULE_END

_CORBA_MODULE_END

_CORBA_MODULE POA_org
_CORBA_MODULE_BEG

  _CORBA_MODULE omg
  _CORBA_MODULE_BEG

    _CORBA_MODULE boxedRMI
    _CORBA_MODULE_BEG

      _CORBA_MODULE java
      _CORBA_MODULE_BEG

        _CORBA_MODULE lang
        _CORBA_MODULE_BEG

        _CORBA_MODULE_END

      _CORBA_MODULE_END

    _CORBA_MODULE_END

  _CORBA_MODULE_END

_CORBA_MODULE_END



_CORBA_MODULE OBV_java
_CORBA_MODULE_BEG

  _CORBA_MODULE lang
  _CORBA_MODULE_BEG

  _CORBA_MODULE_END

_CORBA_MODULE_END

_CORBA_MODULE OBV_org
_CORBA_MODULE_BEG

  _CORBA_MODULE omg
  _CORBA_MODULE_BEG

    _CORBA_MODULE boxedRMI
    _CORBA_MODULE_BEG

      _CORBA_MODULE java
      _CORBA_MODULE_BEG

        _CORBA_MODULE lang
        _CORBA_MODULE_BEG

        _CORBA_MODULE_END

      _CORBA_MODULE_END

    _CORBA_MODULE_END

  _CORBA_MODULE_END

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr





#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_seq1__StackTraceElement
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_seq1__StackTraceElement
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_seq1__StackTraceElement
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_seq1__StackTraceElement
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_seq1__StackTraceElement
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_seq1__StackTraceElement
#endif

#endif  // __seq1__StackTraceElement_hh__

