// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __Throwable_hh__
#define __Throwable_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_Throwable
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_Throwable
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_Throwable
#endif



#ifndef __seq1__StackTraceElement_hh_EXTERNAL_GUARD__
#define __seq1__StackTraceElement_hh_EXTERNAL_GUARD__
#include <seq1_StackTraceElement.hh>
#endif
#ifndef __corbaidl_hh_EXTERNAL_GUARD__
#define __corbaidl_hh_EXTERNAL_GUARD__
#include <corbaidl.hh>
#endif
#ifndef __boxes_hh_EXTERNAL_GUARD__
#define __boxes_hh_EXTERNAL_GUARD__
#include <boxes.hh>
#endif
#ifndef __StackTraceElement_hh_EXTERNAL_GUARD__
#define __StackTraceElement_hh_EXTERNAL_GUARD__
#include <StackTraceElement.hh>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE java

_CORBA_MODULE_BEG

  _CORBA_MODULE lang

  _CORBA_MODULE_BEG

#ifndef __java_mlang_mThrowable__
#define __java_mlang_mThrowable__

    class Throwable;

    class Throwable_Helper {
    public:
      static void add_ref(Throwable*);
      static void remove_ref(Throwable*);
      static void marshal(Throwable*, cdrStream&);
      static Throwable* unmarshal(cdrStream&);
    };

    typedef _CORBA_Value_Var    <Throwable,Throwable_Helper> Throwable_var;
    typedef _CORBA_Value_Member <Throwable,Throwable_Helper> Throwable_member;
    typedef _CORBA_Value_OUT_arg<Throwable,Throwable_Helper> Throwable_out;

#endif // __java_mlang_mThrowable__

    class Throwable : 
      public virtual CORBA::ValueBase
    {
    public:  
      // Standard mapping
      typedef Throwable*    _ptr_type;
      typedef Throwable_var _var_type;

      static _ptr_type _downcast (CORBA::ValueBase*);
      

#ifdef OMNI_HAVE_COVARIANT_RETURNS
      virtual Throwable* _copy_value();
#else
      virtual CORBA::ValueBase* _copy_value();
#endif

      // Definitions in this scope
      

      // Operations and attributes
      virtual CORBA::WStringValue* message() = 0;
      virtual Throwable* cause() = 0;
      virtual org::omg::boxedRMI::java::lang::seq1_StackTraceElement* stackTrace() = 0;

      // Accessors for public members
      

    protected:
      // Accessors for private members
      

    public:
      // omniORB internal
      virtual const char* _NP_repositoryId() const;
      virtual const char* _NP_repositoryId(CORBA::ULong& _hashval) const;

      virtual const _omni_ValueIds* _NP_truncatableIds() const;

      virtual CORBA::Boolean _NP_custom() const;

      virtual void* _ptrToValue(const char* id);

      static void _NP_marshal(Throwable*, cdrStream&);
      static Throwable* _NP_unmarshal(cdrStream&);
      

      virtual void _PR_marshal_state(cdrStream&) const;
      virtual void _PR_unmarshal_state(cdrStream&);
      virtual void _PR_copy_state(Throwable*);

      static _core_attr const char* _PD_repoId;

    protected:
      Throwable();
      virtual ~Throwable();

    private:
      // Not implemented
      Throwable(const Throwable &);
      void operator=(const Throwable &);
    };

    class Throwable_init : public CORBA::ValueFactoryBase
    {
    public:
      virtual ~Throwable_init();

      virtual Throwable* create__() = 0;
      virtual Throwable* create__CORBA_WStringValue(CORBA::WStringValue* arg0) = 0;
      virtual Throwable* create__CORBA_WStringValue__java_lang_Throwable(CORBA::WStringValue* arg0, Throwable* arg1) = 0;
      virtual Throwable* create__java_lang_Throwable(Throwable* arg0) = 0;

      static Throwable_init* _downcast(CORBA::ValueFactory _v);
      virtual void* _ptrToFactory(const char* _id);
    protected:
      Throwable_init();
    };

  _CORBA_MODULE_END

_CORBA_MODULE_END



_CORBA_MODULE POA_java
_CORBA_MODULE_BEG

  _CORBA_MODULE lang
  _CORBA_MODULE_BEG

  _CORBA_MODULE_END

_CORBA_MODULE_END



_CORBA_MODULE OBV_java
_CORBA_MODULE_BEG

  _CORBA_MODULE lang
  _CORBA_MODULE_BEG

    class Throwable :
      public virtual java::lang::Throwable
    {
    protected:
      Throwable();
      
      virtual ~Throwable();

    public:
      

    protected:
      

    private:
      
    };

  _CORBA_MODULE_END

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr





#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_Throwable
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_Throwable
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_Throwable
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_Throwable
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_Throwable
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_Throwable
#endif

#endif  // __Throwable_hh__

