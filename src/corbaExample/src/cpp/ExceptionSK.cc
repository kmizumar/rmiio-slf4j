// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "Exception.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



// valuetype Exception

void
java::lang::Exception_Helper::add_ref(::java::lang::Exception* _v)
{
  if (_v) _v->_add_ref();
}

void
java::lang::Exception_Helper::remove_ref(::java::lang::Exception* _v)
{
  if (_v) _v->_remove_ref();
}

java::lang::Exception*
java::lang::Exception::_downcast(CORBA::ValueBase* _b)
{
  return _b ? (java::lang::Exception*)_b->_ptrToValue(_PD_repoId) : 0;
}

const char* java::lang::Exception::_PD_repoId = "RMI:java.lang.Exception:77E8B62CD7E79AA2:D0FD1F3E1A3B1CC4";

const char*
java::lang::Exception::_NP_repositoryId() const
{
  return _PD_repoId;
}

const char*
java::lang::Exception::_NP_repositoryId(CORBA::ULong& hash) const
{
  hash = 4186476412U;
  return _PD_repoId;
}

CORBA::Boolean
java::lang::Exception::_NP_custom() const
{
  return 0;
}

void*
java::lang::Exception::_ptrToValue(const char* _id)
{
  if (_id == ::java::lang::Exception::_PD_repoId)
    return (::java::lang::Exception*) this;
  
  if (_id == ::java::lang::Throwable::_PD_repoId)
    return (::java::lang::Throwable*) this;



  if (_id == CORBA::ValueBase::_PD_repoId)
    return (CORBA::ValueBase*) this;
  
  if (omni::strMatch(_id, ::java::lang::Exception::_PD_repoId))
    return (::java::lang::Exception*) this;
  
  if (omni::strMatch(_id, ::java::lang::Throwable::_PD_repoId))
    return (::java::lang::Throwable*) this;



  if (omni::strMatch(_id, CORBA::ValueBase::_PD_repoId))
    return (CORBA::ValueBase*) this;

  return 0;
}

void
java::lang::Exception::_NP_marshal(java::lang::Exception* _v, cdrStream& _0s)
{
  omniValueType::marshal(_v, java::lang::Exception::_PD_repoId, _0s);
}

void
java::lang::Exception_Helper::marshal(::java::lang::Exception* _v, cdrStream& _0s)
{
  java::lang::Exception::_NP_marshal(_v,_0s);
}

java::lang::Exception*
java::lang::Exception::_NP_unmarshal(cdrStream& _0s)
{
  CORBA::ValueBase* _b = omniValueType::unmarshal(java::lang::Exception::_PD_repoId,
						  4186476412U, 0, _0s);
  java::lang::Exception* _d = java::lang::Exception::_downcast(_b);
  if (_b && !_d) {
    _b = omniValueType::handleIncompatibleValue(
           java::lang::Exception::_PD_repoId,
           4186476412U, _b, (CORBA::CompletionStatus)_0s.completion());
    _d = java::lang::Exception::_downcast(_b);
  }
  return _d;
}

java::lang::Exception*
java::lang::Exception_Helper::unmarshal(cdrStream& _0s)
{
  return java::lang::Exception::_NP_unmarshal(_0s);
}

void
java::lang::Exception::_PR_marshal_state(cdrStream& _0s) const
{
  ::java::lang::Throwable::_PR_marshal_state(_0s);

}

void
java::lang::Exception::_PR_unmarshal_state(cdrStream& _0s)
{
  ::java::lang::Throwable::_PR_unmarshal_state(_0s);

}

#ifdef OMNI_HAVE_COVARIANT_RETURNS
java::lang::Exception*
#else
CORBA::ValueBase*
#endif
java::lang::Exception::_copy_value()
{
  CORBA::ValueBase* _b;
  _b = _omni_ValueFactoryManager::create_for_unmarshal(_PD_repoId, 4186476412U);
  java::lang::Exception* _v = java::lang::Exception::_downcast(_b);
  if (!_v) {
    CORBA::remove_ref(_b);
    OMNIORB_THROW(BAD_PARAM, BAD_PARAM_ValueFactoryFailure,
		  CORBA::COMPLETED_NO);
  }
  _v->_PR_copy_state(this);
  return _v;
}

void
java::lang::Exception::_PR_copy_state(java::lang::Exception* _v)
{
  ::java::lang::Throwable::_PR_copy_state(_v);

}


java::lang::Exception::Exception()  {}
java::lang::Exception::~Exception() {}

OBV_java::lang::Exception::Exception() {}
OBV_java::lang::Exception::~Exception() {}

const _omni_ValueIds*
java::lang::Exception::_NP_truncatableIds() const
{
  return 0;
}

java::lang::Exception_init::Exception_init()  {}
java::lang::Exception_init::~Exception_init() {}

java::lang::Exception_init*
java::lang::Exception_init::_downcast(CORBA::ValueFactory _v)
{
  return _v ? (::java::lang::Exception_init*)_v->_ptrToFactory(::java::lang::Exception::_PD_repoId) : 0;
}

void*
java::lang::Exception_init::_ptrToFactory(const char* _id)
{
  if (_id == ::java::lang::Exception::_PD_repoId)
    return (::java::lang::Exception_init*) this;
  
  if (_id == CORBA::ValueBase::_PD_repoId)
    return (CORBA::ValueFactoryBase*) this;
  
  if (omni::strMatch(_id, ::java::lang::Exception::_PD_repoId))
    return (::java::lang::Exception_init*) this;
  
  if (omni::strMatch(_id, CORBA::ValueBase::_PD_repoId))
    return (CORBA::ValueFactoryBase*) this;

  return 0;
}

